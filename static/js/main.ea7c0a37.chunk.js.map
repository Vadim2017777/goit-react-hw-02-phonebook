{"version":3,"sources":["componets/ContactForm/ContactForm.js","componets/Filter/Filter.js","componets/ContactListItem/ContactListItem.js","componets/ContactList/ContactList.js","componets/App.js","index.js"],"names":["ContactForm","state","name","number","handleInputChange","e","setState","target","value","handleSubmit","preventDefault","props","onAddContacts","this","onSubmit","type","onChange","Component","defaultProps","contacts","Filter","filter","TaskListItem","onRemove","onClick","ContactList","map","id","ContactListItem","key","App","addContacts","uuidv4","some","alert","prevState","removeContacts","contact","changeFilter","getVisibleContacts","toLowerCase","includes","VisibleContacts","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea7c0a37.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ContactForm.module.css';\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onAddContacts(this.state);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name } = this.state;\r\n    const { number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"name\"\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            value={number}\r\n            name=\"number\"\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.defaultProps = {\r\n  contacts: [],\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onRemove: PropTypes.func,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.node,\r\n    }),\r\n  ).isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ filter, onChange }) => (\r\n  <input type=\"text\" value={filter} onChange={onChange} />\r\n);\r\n\r\nexport default Filter;\r\n\r\nFilter.defaultProps = {\r\n  filter: '',\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ContactListItem.module.css';\r\n\r\nconst TaskListItem = ({ name, number, onRemove }) => (\r\n  <li>\r\n    <p>\r\n      {name}:{number}\r\n    </p>\r\n\r\n    <button type=\"button\" onClick={onRemove}>\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nexport default TaskListItem;\r\n\r\nTaskListItem.defaultProps = {\r\n  contacts: [],\r\n};\r\n\r\nTaskListItem.propTypes = {\r\n  onRemove: PropTypes.func,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\n\r\nconst ContactList = ({ contacts, onRemove }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <ContactListItem\r\n        key={id}\r\n        name={name}\r\n        number={number}\r\n        onRemove={() => onRemove(id)}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  onRemove: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.node,\r\n    }),\r\n  ).isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport ContactListForm from './ContactForm/ContactForm';\r\nimport Filter from './Filter/Filter';\r\nimport ContactList from './ContactList/ContactList';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  addContacts = ({ name, number }) => {\r\n    const contacts = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n    const overlap = this.state.contacts.some(\r\n      contacts => contacts.name === name,\r\n    );\r\n\r\n    if (!overlap) {\r\n      this.setState(prevState => {\r\n        return {\r\n          contacts: [...prevState.contacts, contacts],\r\n        };\r\n      });\r\n    } else alert(`${name} is already in contacts`);\r\n  };\r\n\r\n  removeContacts = id => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n      };\r\n    });\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    return this.state.contacts.filter(contact => {\r\n      return contact.name\r\n        .toLowerCase()\r\n        .includes(this.state.filter.toLowerCase());\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const VisibleContacts = this.getVisibleContacts();\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactListForm onAddContacts={this.addContacts} />\r\n        <h2>Contacts</h2>\r\n\r\n        {this.state.contacts.length > 1 && (\r\n          <>\r\n            <h3>Find my contacts</h3>\r\n            <Filter value={filter} onChange={this.changeFilter} />\r\n          </>\r\n        )}\r\n\r\n        {this.state.contacts.length > 0 && (\r\n          <ContactList\r\n            contacts={VisibleContacts}\r\n            onRemove={this.removeContacts}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './componets/App';\r\n\r\nimport './componets/App';\r\n\r\nimport './base.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}